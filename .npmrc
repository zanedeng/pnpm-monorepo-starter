# `save-workspace-protocol` 是 pnpm 工具中的一个配置选项，用于控制在使用工作区（Workspace）功能时的行为。
# 工作区允许你在一个项目中管理多个相互依赖的 npm 包。
# 1、当设置为 true 时，pnpm 将使用特殊协议前缀（如 workspace:^ 或 workspace:）来记录工作区中子包的依赖到根目录的 package.json 文件中。
# 这意味着当你安装或更新子包的依赖时，这些依赖关系会被显式地反映在工作区的顶层，便于理解和管理整个工作区的依赖版本。
# 2、当设置为 false 时，pnpm 不会使用特殊协议前缀来记录子包的依赖。
# 这意味着工作区根目录的 package.json 不会包含子包的直接依赖细节，
# 而是可能通过其他方式（如 file: 协议或直接的包名称没有版本限定符）来引用子包本身。
save-workspace-protocol = true

# 用于定义当使用 npm install <package> 命令添加依赖时，保存到 package.json 文件中的版本前缀。
# 这个前缀决定了将来安装时使用的版本约束方式。
# 默认情况下，npm 使用 ^ 作为前缀，这意味着它允许安装指定包的最新次要或补丁版本，只要这些版本不改变最左边的非零数字（遵循语义化版本控制）。
# 例如，^1.2.3 会允许安装 1.x.x 版本，但不会升级到 2.0.0。
# save-prefix 配置可以被设置为不同的值，以改变这一行为。例如：
# ^: 允许升级到兼容的次要和补丁版本。
# ~: 允许升级到兼容的补丁版本，但不升级次要版本。
# = 或 ``: 固定到确切的版本，不允许任何版本变动。
save-prefix = ''

# 这个配置项告诉 pnpm 应该如何处理工作空间（workspaces）或项目中依赖包的提升（hoisting）行为。
# 提升指的是将依赖包安装到尽可能高的层级目录下，通常是根目录的 node_modules/.pnpm 中
# 以便所有子项目可以共享这些依赖，减少磁盘占用并提高安装效率。
public-hoist-pattern[] = *eslint*
public-hoist-pattern[] = *postcss*
public-hoist-pattern[] = *stylelint*
public-hoist-pattern[] = *prettier*
public-hoist-pattern[] = lint-staged
public-hoist-pattern[] = *@commitlint*
public-hoist-pattern[] = father
public-hoist-pattern[] = czg
public-hoist-pattern[] = simple-git-hooks

# 指定私有仓库源，适用于所有包
registry=http://registry.npmmirror.com
# registry=https://registry.npmjs.org
